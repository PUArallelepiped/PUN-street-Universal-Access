openapi: 3.0.3
info:
  title: PUN street Universal Access - OpenAPI 3.0
  description: pua
  version: v1
servers:
- url: http://localhost:5000/api/v1
paths:
  /store/{storeID}:
    get:
      tags:
      - store
      summary: return a store by ID
      parameters:
      - name: storeID
        in: path
        description: The ID of the store to return.
        required: true
        content:
          application/json:
            schema:
              type: string
              example: "1"
              x-content-type: application/json
      responses:
        "200":
          description: A Store object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreInfo'
        "400":
          description: The specified store ID is invalid (not a number).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /cart/{customerID}/{productID}/{storeID}:
    get:
      tags:
      - cart
      summary: return a cart by ID
      parameters:
      - name: customerID
        in: path
        description: The ID of the table to return
        required: true
        content:
          application/json:
            schema:
              type: string
              example: "1"
              x-content-type: application/json
      - name: productID
        in: path
        description: The ID of the table to return
        required: true
        content:
          application/json:
            schema:
              type: string
              example: "1"
              x-content-type: application/json
      - name: storeID
        in: path
        description: The ID of the table to return
        required: true
        content:
          application/json:
            schema:
              type: string
              example: "1"
              x-content-type: application/json
      responses:
        "200":
          description: A cart object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartInfo'
        "400":
          description: The specified cart ID is invalid (not a number).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /cart/{customerID}:
    get:
      tags:
      - cart
      summary: return carts by CustomerID
      parameters:
      - name: customerID
        in: path
        description: The ID of the table to return
        required: true
        content:
          application/json:
            schema:
              type: string
              example: "1"
              x-content-type: application/json
      responses:
        "200":
          description: Carts object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CartArray'
        "400":
          description: The specified cart ID is invalid (not a number).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /cart:
    post:
      tags:
      - cart
      summary: add a new cart to db and return a cart from db
      requestBody:
        description: add a new cart.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartInfo'
      responses:
        "200":
          description: A cart object.
        "400":
          description: The specified cart ID is invalid (not a number).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        
components:
  schemas:
    StoreInfo:
      required:
      - address
      - email
      - id
      - name
      - phome
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: i'm pasta
        address:
          type: string
          example: pun street
        email:
          type: string
          example: pasta@pasta.com
        phone:
          type: string
          example: "0912345678"
      example:
        address: pun street
        phone: "0912345678"
        name: i'm pasta
        id: 1
        email: pasta@pasta.com
    CartInfo:
      required:
      - product_quantity
      - customer_id
      - product_id
      - store_id
      type: object
      properties:
        product_quantity:
          type: integer
          format: int64
          example: 10
        customer_id:
          type: integer
          format: int64
          example: 1
        product_id:
          type: integer
          format: int64
          example: 1
        store_id:
          type: integer
          format: int64
          example: 1
      example:
        quantity: 10
        customer_id: 1
        product_id: 1
        store_id: 1
    CartArray:
      type: array
      items:
        $ref: '#/components/schemas/CartInfo'
    Error:
      required:
      - code
      - message
      type: object
      properties:
        message:
          type: string
        code:
          type: integer
          format: int64
